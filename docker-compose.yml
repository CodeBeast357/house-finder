version: "3.8"
services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  app:
    image: house-finder-app:latest
    build:
      context: app
      target: dev
    environment:
      VUE_APP_MAPBOX_TOKEN: ${MAPBOX_TOKEN}
    volumes:
      - /Users/massintha/projects/house-finder/app:/app
    expose:
      - 8080
    labels:
      - "traefik.http.routers.app.rule=PathPrefix(`/app`) || PathPrefix(`/sockjs-node`)"
  service:
    image: house-finder-service:latest
    build:
      context: .
      dockerfile: Dockerfile_dev
    environment:
      MAPBOX_TOKEN: ${MAPBOX_TOKEN}
    volumes:
      - /Users/massintha/projects/house-finder/src:/house-finder-src/src
    expose:
      - 8080
    labels:
      - "traefik.http.middlewares.service.stripprefix.prefixes=/service"
      - "traefik.http.routers.service.rule=PathPrefix(`/service`)"
      - "traefik.http.routers.service.middlewares=service@docker"
  house_finder_db:
    environment:
      POSTGRES_DB: house_finder
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
    healthcheck:
      interval: 30s
      retries: 3
      test:
        - CMD
        - pg_isready
      timeout: 30s
    image: postgis/postgis:13-master
    restart: always
    volumes:
      - house-db:/var/lib/postgresql/data:rw
  tegola:
    image: house-finder-tegola:latest
    build:
      context: tegola
    restart: always
    expose:
      - 8080
    volumes:
      - house-db:/var/lib/postgresql/data:rw
    labels:
      - "traefik.http.routers.tegola.rule=PathPrefix(`/tiles`)"
  db-schema:
    build:
      context: db
    image: db-schema
    restart: on-failure:10

volumes:
  house-db: {}
